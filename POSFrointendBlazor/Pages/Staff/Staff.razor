@page "/staff"

<MudText Typo="Typo.h6">
    <MudIconButton Icon="@Icons.Material.Filled.Add" aria-label="Create" onClick="Popup">
        Staff
    </MudIconButton>
</MudText>

@if(ResponseModel is not null)
{
    int count = 0;
    <MudSimpleTable Style="overflow-x: auto;">
        <thead>
            <tr>
                <td>No.</td>
                <td>Staff Code</td>
                <td>Staff Name</td>
                <td>Date Of Birth</td>
                <td>Mobile Number</td>
                <td>Address</td>
                <td>Gender</td>
                <td>Position</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ResponseModel.Data.Staff)
            {
                <tr>
                    <td>@(++count)</td>
                    <td>@item.StaffCode</td>
                    <td>@item.StaffName</td>
                    <td>@item.DateOfBirth.ToString("dd-MMM-yyyy")</td>
                    <td>@item.MobileNo</td>
                    <td>@item.Address</td>
                    <td>@item.Gender</td>
                    <td>@item.Position</td>
                </tr>
            }
        </tbody>
    </MudSimpleTable>
}

@code {
    private StaffListResponseModel ResponseModel;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await List();
        //return base.OnAfterRenderAsync(firstRender);
    }

    private async Task List()
    {
        ResponseModel = await HttpClientService.ExecuteAsync<StaffListResponseModel>(EndPoints.Staff, EnumHttpMethod.Get);
    }

    private async Task Create(StaffModel staff)
    {
        var response = await HttpClientService.ExecuteAsync<StaffResponseModel>(
        EndPoints.Staff, EnumHttpMethod.Post, new StaffRequestModel
        {
            StaffCode = staff.StaffCode,
            StaffName = staff.StaffName
        }
        );
    }

    private async Task Popup()
    {
        //DialogOptions maxWidth = new DialogOptions() { MaxWidth = MaxWidth.Medium, FullWidth = true };
        MudBlazor.DialogOptions maxWidth = new MudBlazor.DialogOptions()
            {
                MaxWidth = MaxWidth.Small,
                FullWidth = true,
                DisableBackdropClick = true,
                CloseOnEscapeKey = false
            };
        var dialog = await DialogService.ShowAsync<>("", maxWidth);
        var result = await dialog.Result;
    }
}
